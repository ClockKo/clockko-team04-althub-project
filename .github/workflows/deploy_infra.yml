name: "Deprecated: Legacy Backend Deploy"

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Image tag to rollback to (must exist in ECR)"
        required: false
        default: "latest"

permissions:
  id-token: write
  contents: read

jobs:
  rollback:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::474422890464:role/clockko-gha-role
          aws-region: us-east-1

      - name: Download latest image tag artifact
        uses: actions/download-artifact@v4
        with:
          name: image-tag
          path: .

      - name: Rollback with Terraform
        run: |
          IMAGE_TAG="${{ github.event.inputs.image_tag }}"
          if [ "$IMAGE_TAG" = "latest" ]; then
            echo "No tag provided, using last built tag from artifact"
            IMAGE_TAG=$(cat image_tag.txt)
          fi
          echo "Rolling back to $IMAGE_TAG"
          cd backend/infra
          terraform init -input=false
          TF_VAR_image_tag=$IMAGE_TAG terraform apply -auto-approve -input=false

      - name: Unlock Terraform state if rollback failed
        if: failure()
        run: |
          cd backend/infra
          LOCK_INFO=$(terraform plan -detailed-exitcode || true)
          LOCK_ID=$(echo "$LOCK_INFO" | grep -oE 'ID: [a-z0-9-]+' | awk '{print $2}' || true)

          if [ -n "$LOCK_ID" ]; then
            echo "Found Terraform lock: $LOCK_ID"
            terraform force-unlock -force $LOCK_ID || true
          else
            echo "No Terraform lock detected"
          fi
